#!/bin/bash
SRCMOD=$(ls [!_]*.f90)
SRCMOD="$SRCMOD $(ls [!_]*.cpp)" 
SRCMOD="$SRCMOD $(ls [!_]*.c)" 
SRCMOD="$SRCMOD $(ls [!_]*.cu)" 
#
rm -f makefile
rm -f *.o 
rm -f *.mod 
rm -f *~
#
cat > makefile << EOF
TOPDIR=../../
include \$(TOPDIR)/CONFIG

TARGET=lowdin-ints.x
LDR=\$(FC)
INC=-I\$(TOPDIR)src/core/
LDPATH=\$(TOPDIR)lib/lowdincore.a
FLAGS=\$(FCFLAGS)
LIBS=\$(ALL_LIBS)

OBJECTS=$(for file in $SRCMOD 
          do
            echo -e "${file%.*}.o \c"
          done
          ) 
EOF
echo -e "\n\$(TARGET) : \$(OBJECTS)" >> makefile
echo -e "\t\$(LDR) \$(FLAGS) -o \$(TARGET) \$(OBJECTS) \$(LDPATH) \$(LIBS)" >> makefile
echo -e "\tmv \$(TARGET) \$(TOPDIR)bin/\n" >> makefile
SRCMOD=$(ls [!_]*.f90)
#Fortran
for file in $SRCMOD 
do
  echo -e "${file%.*}.o:\t${file} \c" >> makefile
   for ifile in $INC
   do
      inc=$(grep $ifile $file)
      if [[ -n $inc ]]
      then
        echo -e "$ifile \c" >> makefile
      fi
   done
  for mod in $(grep use\  $file | cut -d" " -f4 | cut -d"_" -f1)
   do
     name=$(echo $mod)
     
     for jfile in $SRCMOD
     do
       if [[ $jfile == $name.f90 ]]
       then
         echo -e "$name.o \c" >> makefile
       fi
     done
   done
  echo -e "\n\t\$(FC) -c \$(INC) \$(FLAGS) ${file}\n" >> makefile
done
#c++ sources
SRCMOD=$(ls [!_]*.cpp)
for file in $SRCMOD 
do
    echo -e "${file%.cpp}.o:\t${file} \c" >> makefile
    echo -e "\n\t\$(CU) -c \$(INC) ${file}\n" >> makefile
# \$(CFLAGS) ${file}\n" >> makefile
done
#
#c sources
SRCMOD=$(ls [!_]*.c)
for file in $SRCMOD 
do
    echo -e "${file%.c}.o:\t${file} \c" >> makefile
    echo -e "\n\t\$(CU) -c \$(INC) ${file}\n" >> makefile
done
#cuda sources
SRCMOD=$(ls [!_]*.cu)
for file in $SRCMOD 
do
    echo -e "${file%.cu}.o:\t${file} \c" >> makefile
    echo -e "\n\t\$(CU) -c \$(INC) ${file}\n" >> makefile
done
#
cat >> makefile << EOF
clean:: 
	rm -f *.o
	rm -f *.mod
	rm makefile
EOF
#
